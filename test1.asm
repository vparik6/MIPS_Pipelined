main:       addi $2, $0, 5 # initialize $2 = 5        0       20020005
	    addi $3, $0, 12 # initialize $3 = 12      4       2003000c
	    addi $7, $3, -9 # initialize $7 = 3       8       2067fff7
	    or $4, $2, $3 # $4 = (5 OR 12) = 13       c       00432025
	    and $5, $3, $4 # $5 = (12 AND 13) = 12   10       00642824
	    add $5, $5, $4 # $5 = 12 + 13 = 25       14       00a42820
	    slt $17, $7, $5 # $17 = 1 ($7 < $5)?     18       00e5882a
	    slti $18, $7, 20 # $18 = 1($7 < 20)?     1c       28f20014
	    beq $5, $7, end # shouldn't be taken     20       10a70011
	    mult $2, $3 # hi, lo = 5*12              24       00430018
	    mflo $1 # $1 = lo = 60 		      28       00000812
	    bne $4, $17, around # should be taken    30       14910001
	    addi $5, $0, 10 # shouldn't happen       34       2005000a
around:     slt $4, $7, $2 # $4 = 3 < 5 = 1          38       00e2202a
	    sll $19, $5, 3 # $19 = $5 << 3 = 200     3c       000598c0
	    srl $20, $5, 2 # $20 = $5 >> 2 = 6       40       0005a082
	    jal func  #                              44       0c10001b
	    add $7, $4, $5 # $7 = 1 + 25 = 26        48       00853820
	    sub $7, $7, $2 # $7 = 26 -5 = 21         4c       00e23822
	    sw $7, 68($3) # [80] = 21                50       ac670044
	    lw $2, 80($0) # $2 = [80] = 21           54       8c020050
	    addi $19, $19, 8800 # $19 =9000          58       22732260
	    sb $19, 1000($0) # [1000] = 10111000     5c       a01303e8
	    lb $24, 1000($0) # $24 = 184             60       801803e8
	    j end # should be taken 3c 08000011      64       0810001a
	    addi $2, $0, 1 # shouldn't happen        68       20020001
end:        sw $2, 84($0) # [84] = 7                 6c       ac020054          
func:       add $6, $18, $19 # $6 = (1+200) = 201    70       02533020
	    sub $6, $6, $5 # $6 = (201-25) = 176     74       00c53022
	    div $19, $5 # hi, lo = 8                 78       0265001a
	    jr $31 # return ra                       7c       03e00008
